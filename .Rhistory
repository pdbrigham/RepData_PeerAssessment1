mean_steps_per_day <-mean(total_steps_per_day$steps)
mean_steps_per_day <- aggregate(steps~date,data=total_steps_per_day,mean)
View(total_steps_per_day)
View(mean_steps_per_day)
View(total_steps_per_day)
mean_steps_per_day <- aggregate(steps~date,data=activity,mean,na.rm=TRUE)
View(mean_steps_per_day)
View(total_steps_per_day)
median_steps_per_day <- aggregate(steps~date,data=activity,median,na.rm=TRUE)
View(median_steps_per_day)
avgSteps <- tapply(activity$steps, activity$date, mean, na.rm=T)
View(activity)
activity<-read.csv ("./JHDS_ReproducableResearch/RepData_PeerAssessment1/activity.csv")
total_steps_per_day <- aggregate(steps~date,data=activity,sum,na.rm=TRUE)
mean_steps_per_day <- aggregate(steps~date,data=activity,mean,na.rm=TRUE)
median_steps_per_day <- aggregate(steps~date,data=activity,median,na.rm=TRUE)
View(median_steps_per_day)
median_steps_per_day <- aggregate(steps~date,data=activity[which(steps>0)],median,na.rm=TRUE)
median_steps_per_day <- aggregate(steps~date,data=activity[which(activity$steps>0)],median,na.rm=TRUE)
View(activity)
median_steps_per_day <- aggregate(steps~date,data=activity[activity[, "steps"]> 0, ],median,na.rm=TRUE)
View(median_steps_per_day)
View(mean_steps_per_day)
View(total_steps_per_day)
View(mean_steps_per_day)
hist(total_steps_per_day, xlab = "Number of Steps", main = "Histogram: Total Steps per Day")
legend("topright", legend = c("Average",mean_steps_per_day,"Median",median_steps_per_day))
hist(total_steps_per_day, xlab = "Number of Steps", main = "Histogram: Total Steps per Day")
hist(total_steps_per_day)
hist(total_steps_per_day$steps)
hist(total_steps_per_day$steps,breaks=total_steps_per_day$date)
hist(total_steps_per_day$steps,date)
hist(total_steps_per_day$steps~total_steps_per_day$date)
hist(total_steps_per_day)
hist(total_steps_per_day$steps)
setwd = "/Users/Pa/R Classes/"
totsteps <- tapply(activity$steps, activity$date,sum)
hist(totsteps,col="blue",xlab="Total Steps per Day",
ylab="Frequency", main="Histogram of Total Steps taken per day")
hist(total_steps_per_day$steps, col="black", xlab= "Total Steps take per day",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
hist(total_steps_per_day$steps, col="light blue", xlab= "Total Steps take per day",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
hist(total_steps_per_day$steps, col="light blue", xlab= "Total Steps",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
activity$interval <- as.factor(activity$interval)
total_steps_per_day <- aggregate(steps~date,data=activity,sum,na.rm=TRUE)
hist(total_steps_per_day$steps, col="light blue", xlab= "Total Steps",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
interval_mean<- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
interval_mean
plot(row.names(interval_mean),interval_mean,type="l",
xlab="Time Intervals (5-minute)",
ylab="Mean number of steps taken (all Days)",
main="Average Steps Taken at 5 minute Intervals",
col="light blue")
interval_mean[which.max(interval_mean$steps),]$interval
max_interval <- which.max(interval_mean)
interval_max_steps <- names(interval_mean)
interval_max_steps <- names(max_interval)
missing_values <- sum(is.na(activity))
missing_values <- sum(is.na(activity$steps))
missing_values <- sum(is.na(activity$steps))
activityImputed <- NULL
activityMissing <- activity[is.na(activity$steps), ]
for(i in 1:nrow(activityMissing)) {
row <- activityMissing[i,]
row$steps <- stepsPerInterval[stepsPerInterval$interval == row$interval, ]$steps[1]
activityImputed <<- rbind(row, activityImputed)
}
activityImputed <- rbind(activityImputed, activity[!is.na(activity$steps), ])
View(activityImputed)
View(activityMissing)
activityImputed <- NULL
activityMissing <- activity[is.na(activity$steps), ]
for(i in 1:nrow(activityMissing)) {
row <- activityMissing[i,]
row$steps <- mean_steps_per_day[mean_steps_per_day$interval == row$interval, ]$steps[1]
activityImputed <<- rbind(row, activityImputed)
}
activityImputed <- rbind(activityImputed, activity[!is.na(activity$steps), ])
View(activityImputed)
View(activityMissing)
activityImputed <- mean_steps_per_day
activityMissing <- activity[is.na(activity$steps), ]
for(i in 1:nrow(activityMissing)) {
row <- activityMissing[i,]
row$steps <- mean_steps_per_day[mean_steps_per_day$interval == row$interval, ]$steps[1]
activityImputed <<- rbind(row, activityImputed)
}
activityImputed <- rbind(activityImputed, activity[!is.na(activity$steps), ])
View(activityImputed)
View(mean_steps_per_day)
View(activityImputed)
for(i in 1:nrow(activityMissing)) {
row <- activityMissing[i,]
row$steps <- mean_steps_per_day[mean_steps_per_day$interval == row$interval, ]$steps[1]
activityImputed <<- rbind(row, activity)
}
activityImputed <- rbind(activity, activity[!is.na(activity$steps), ])
View(activityImputed)
---
setwd = "/Users/Pa/R Classes/"
activity<-read.csv ("./JHDS_ReproducableResearch/RepData_PeerAssessment1/activity.csv")
## convert date from factor to a date
activity$date <- as.Date(activity$date, "%Y-%m-%d")
## convert the interval to a factor
activity$interval <- as.factor(activity$interval)
total_steps_per_day <- aggregate(steps~date,data=activity,sum,na.rm=TRUE)
mean_steps_per_day <- aggregate(steps~date,data=activity,mean,na.rm=TRUE)
median_steps_per_day <- aggregate(steps~date,data=activity[activity[, "steps"]> 0, ],median,na.rm=TRUE)
hist(total_steps_per_day$steps, col="light blue", xlab= "Total Steps",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
interval_mean<- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
plot(row.names(interval_mean),interval_mean,type="l",
xlab="Time Intervals (5-minute)",
ylab="Mean number of steps taken (all Days)",
main="Average Steps Taken at 5 minute Intervals",
col="light blue")
max_interval <- which.max(interval_mean)
interval_max_steps <- names(max_interval)
View(mean_steps_per_day)
View(activity)
interval_mean
missing_values <-(is.na(activity$steps))
sum(missing_values)
missing_values
activity[missing_values,]
View(activity)
View(activity)
which[activity[missing_values,],date=="2012-10-01"]
filter(activity[missing_values,],date=="2012-10-01")
which(activity,is.na(steps))
which(activity,is.na(steps)==TRUE)
which(activity,is.na(steps)=TRUE)
activity[is.na(activity$steps)]
activity[is.na(activity$steps)= TRUE]
activity[is.na(activity$steps),]
missing_steps<-activity[is.na(activity$steps),]
View(missing_steps)
activity<-read.csv ("./JHDS_ReproducableResearch/RepData_PeerAssessment1/activity.csv")
total_steps_per_day <- aggregate(steps~date,data=activity,sum,na.rm=TRUE)
mean_steps_per_day <- aggregate(steps~date,data=activity,mean,na.rm=TRUE)
median_steps_per_day <- aggregate(steps~date,data=activity[activity[, "steps"]> 0, ],median,na.rm=TRUE)
hist(total_steps_per_day$steps, col="light blue", xlab= "Total Steps",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
interval_mean<- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
plot(row.names(interval_mean),interval_mean,type="l",
xlab="Time Intervals (5-minute)",
ylab="Mean number of steps taken (all Days)",
main="Average Steps Taken at 5 minute Intervals",
col="light blue")
plot(row.names(interval_mean),interval_mean,type="l",
xlab="Time Intervals (5-minute)",
ylab="Mean number of steps taken (all Days)",
main="Average Steps Taken at 5 minute Intervals",
col="purple")
max_interval <- which.max(interval_mean)
interval_max_steps <- names(max_interval)
missing_values <-(is.na(activity$steps))
sum(missing_values)
missing_steps<-activity[is.na(activity$steps),]
View(missing_steps)
missing_steps$steps <-
missing_steps
interval_mean
colnames(missing_steps)[colnames(missing_steps)=="steps"] <- "steps_new"
View(missing_steps)
missing_
colnames(missing_steps)[colnames(missing_steps)=="steps"] <- "steps_new"
View(missing_steps)
interval_mean[5]
head(interval_mean)
interval_mean
interval_mean["5"]
missings_steps$steps<-interval_mean[missing_steps$interval]
View(missing_steps)
missings_steps$steps_new<-interval_mean[missing_steps$interval]
missing_steps$steps_new<-interval_mean[missing_steps$interval]
View(missing_steps)
activity$date
unique(activity$date)
sum(unique(activity$date))
missing_steps$steps_new<-interval_mean[missing_steps$interval,]
summary(interval_mean)
interval_mean
missing_steps$steps_new<-name(interval_mean[missing_steps$interval])
missing_steps$steps_new<-names(interval_mean[missing_steps$interval])
names(interval_mean)
missing_steps$steps_new<-names(interval_mean)
View(missing_steps)
missing_steps$steps_new<-interval_mean
View(missing_steps)
interval_mean
colnames(missing_steps)[colnames(missing_steps)=="steps"] <- "steps_new"
missing_steps$steps_new<-interval_mean
View(missing_steps)
newdf<-merge(activity,missing_steps,by.x=c("date", "interval"), by.y=c("date", "interval")))
newdf<-merge(activity,missing_steps,by.x=c("date", "interval"), by.y=c("date", "interval"))
View(newdf)
View(newdf)
newdf<-merge(activity,missing_steps,by.x=c("date", "interval"), by.y=c("date", "interval"),all.x = TRUE)
View(newdf)
coalesce <- function(x, y) {
ifelse(is.na(x), y, x)
}
non_empty_activity<-merge(activity,missing_steps,by.x=c("date", "interval"), by.y=c("date", "interval"),all.x = TRUE)
View(non_empty_activity)
non_empty_activity$step<-coalesce(non_empty_activity$steps,snon_empty_activity$steps_new)
View(newdf)
setwd = "/Users/Pa/R Classes/"
activity<-read.csv ("./JHDS_ReproducableResearch/RepData_PeerAssessment1/activity.csv")
activity$date <- as.Date(activity$date, "%Y-%m-%d")
total_steps_per_day <- aggregate(steps~date,data=activity,sum,na.rm=TRUE)
mean_steps_per_day <- aggregate(steps~date,data=activity,mean,na.rm=TRUE)
median_steps_per_day <- aggregate(steps~date,data=activity[activity[, "steps"]> 0, ],median,na.rm=TRUE)
hist(total_steps_per_day$steps, col="light blue", xlab= "Total Steps",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
interval_mean<- tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
plot(row.names(interval_mean),interval_mean,type="l",
xlab="Time Intervals (5-minute)",
ylab="Mean number of steps taken (across all days)",
main="Average Steps Taken at 5 minute Intervals",
col="purple")
max_interval <- which.max(interval_mean)
interval_max_steps <- names(max_interval)
missing_values <-(is.na(activity$steps))
sum(missing_values)
missing_steps<-activity[is.na(activity$steps),]
colnames(missing_steps)[colnames(missing_steps)=="steps"] <- "steps_new"
missing_steps$steps_new<-interval_mean
non_empty_activity<-merge(activity,missing_steps,by.x=c("date", "interval"), by.y=c("date", "interval"),all.x = TRUE)
# coalesce function
coalesce <- function(x, y) {
ifelse(is.na(x), y, x)
}
non_empty_activity$step<-coalesce(non_empty_activity$steps,snon_empty_activity$steps_new)
View(non_empty_activity)
coalesce <- function(x, y) {
ifelse(is.na(x), x,y)
}
non_empty_activity$step<-coalesce(non_empty_activity$steps,snon_empty_activity$steps_new)
View(non_empty_activity)
coalesce <- function(x, y) {
ifelse(is.na(x),y,x)
}
coalesce <- function(x, y) {
ifelse(is.na(x),y,x)
}
non_empty_activity$steps<-coalesce(non_empty_activity$steps,snon_empty_activity$steps_new)
View(non_empty_activity)
missing_steps$steps_new<-interval_mean
View(non_empty_activity)
non_empty_activity$steps<-ifelse(is.na(non_empty_activity$steps,non_empty_activity$steps_new,non_empty_activity$steps)
non_empty_activity$steps<-ifelse(is.na(non_empty_activity$steps),non_empty_activity$steps_new,non_empty_activity$steps)
non_empty_activity$steps<-ifelse(is.na(non_empty_activity$steps),non_empty_activity$steps_new,non_empty_activity$steps)
View(non_empty_activity)
non_empty_activity[,1:3]
non_empty_activity->non_empty_activity[,1:3]
non_empty_activity <- non_empty_activity[,1:3]
View(non_empty_activity)
hist(non_empty_activity$steps, col="light blue", xlab= "Total Steps",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
hist(activity$steps, col="light blue", xlab= "Total Steps",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
hist(non_empty_activity$steps, col="light blue", xlab= "Total Steps",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
hist(activity$steps, col="light blue", xlab= "Total Steps",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
hist(non_empty_activity$steps, col="light blue", xlab= "Total Steps",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
library(lattice)
library(lattice)
weekdays <- weekdays(as.Date(activity$date))
data_with_weekdays <- transform(activity, day=weekdays)
data_with_weekdays$wk <- ifelse(data_with_weekdays$day %in% c("Saturday", "Sunday"),"weekend", "weekday")
average_by_interval_wk <- ddply(data_with_weekdays, .(interval, wk), summarise, steps=mean(steps))
xyplot(steps ~ interval | wk, data = average_by_interval_wk, layout = c(1, 2), type="l")
xyplot(steps ~ interval | wk, data = average_by_interval_wk, layout = c(1, 2), type="l")
average_by_interval_wk <- ddply(data_with_weekdays, .(interval, wk), summarise, steps=mean(steps))
library("dplyr")
library(dplyr)
library(lattice)
average_by_interval_wk <- ddply(data_with_weekdays, .(interval, wk), summarise, steps=mean(steps)
average_by_interval_wk <- ddply(data_with_weekdays, .(interval, wk), summarise, steps=mean(steps))
weekdays <- weekdays(as.Date(activity$date))
data_with_weekdays <- transform(activity, day=weekdays)
data_with_weekdays$wk <- ifelse(data_with_weekdays$day %in% c("Saturday", "Sunday"),"weekend", "weekday")
average_by_interval_wk <- ddply(data_with_weekdays, .(interval, wk), summarise, steps=mean(steps))
xyplot(steps ~ interval | wk, data = average_by_interval_wk, layout = c(1, 2), type="l")
activity["weekday"]<-weekday(date)
activity["weekday"]<-weekdays(activity$date)
View(activity)
weekend_activity <- activity$weekday == c("Saturday","Sunday")
weekend_activity <- activity[activity$weekday == c("Saturday","Sunday")]
weekend_activity <- activity[activity$weekday == c("Saturday","Sunday"),]
View(weekend_activity)
non_empty_activity["weekday"]<-weekdays(non_empty_activity$date)
weekend_activity <- non_empty_activity[non_empty_activity$weekday == c("Saturday","Sunday"),]
amemded_activity<-merge(activity,missing_steps,by.x=c("date", "interval"), by.y=c("date", "interval"),all.x = TRUE)
amemded_activity$steps<-ifelse(is.na(amemded_activity$steps),amemded_activity$steps_new,amemded_activity$steps)
amemded_activity<- amemded_activity[,1:3]
hist(amemded_activity$steps, col="light blue", xlab= "Total Steps",
ylab = "Frequency",main = "Histogram of Total Steps per Day")
amemded_activity["weekday"]<-weekdays(amemded_activity$date)
weekend_activity <- amemded_activity[amemded_activity$weekday == c("Saturday","Sunday"),]
weekday_activity <- amemded_activity[amemded_activity$weekday != c("Saturday","Sunday"),]
activityFilled$day=ifelse(as.POSIXlt(as.Date(amemded_activity$date))$wday%%6==0,
"weekend","weekday")
# For Sunday and Saturday : weekend, Other days : weekday
amemded_activity$day=factor(activityFilled$day,levels=c("weekday","weekend"))
activityFilled$day=ifelse(as.POSIXlt(as.Date(amemded_activity$date))$wday%%6==0,
"weekend","weekday")
# For Sunday and Saturday : weekend, Other days : weekday
amemded_activity$day=factor(amemded_activity$day,levels=c("weekday","weekend"))
stepsInterval2=aggregate(steps~interval+day,activityFilled,mean)
library(lattice)
xyplot(steps~interval|factor(day),data=stepsInterval2,aspect=1/2,type="l")
df.weekend.steps <- aggregate(weekend_activity$steps, by=list(weekend_activity$interval), FUN=mean)
df.weekday.steps <- aggregate(weekday_activity$steps, by=list(weekday_activity$interval), FUN=mean)
par(mfrow=c(2,1))
plot( x=df.weekend.steps[,1],
y=df.weekend.steps[,2],
type="l",
col=124,
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval ID")
plot( x=df.weekday.steps[,1],
y=df.weekday.steps[,2],
type="l",
col=554,
main="Weekday average steps per interval",
ylab="Average steps",
xlab="Interval ID")
plot( x=df.weekend.steps[,1],
y=df.weekend.steps[,2],
type="l",
col=554,
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval ID")
plot( x=df.weekday.steps[,1],
y=df.weekday.steps[,2],
type="l",
col=554,
main="Weekday average steps per interval",
ylab="Average steps",
xlab="Interval ID")
plot( x=df.weekend.steps[,1],
y=df.weekend.steps[,2],
type="l",
col=554,
asp=3,
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval ID")
plot( x=df.weekday.steps[,1],
y=df.weekday.steps[,2],
type="l",
asp=3
col=554,
main="Weekday average steps per interval",
ylab="Average steps",
xlab="Interval ID")
plot( x=df.weekend.steps[,1],
y=df.weekend.steps[,2],
type="l",
col=554,
asp=2,
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval ID")
plot( x=df.weekday.steps[,1],
y=df.weekday.steps[,2],
type="l",
asp=2
col=554,
main="Weekday average steps per interval",
ylab="Average steps",
xlab="Interval ID")
plot( x=df.weekend.steps[,1],
y=df.weekend.steps[,2],
type="l",
col=554,
asp=.25,
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval ID")
plot( x=df.weekend.steps[,1],
y=df.weekend.steps[,2],
type="l",
col=554,
row=500,
asp=1,
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval ID")
plot( x=df.weekend.steps[,1],
y=df.weekend.steps[,2],
type="l",
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval ID")
plot( x=df.weekend.steps[,1],
y=df.weekend.steps[,2],
type="l",
lwd=10,
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval ID")
df.weekend.steps <- aggregate(weekend_activity$steps, by=list(weekend_activity$interval), FUN=mean) * 1000
df.weekday.steps <- aggregate(weekday_activity$steps, by=list(weekday_activity$interval), FUN=mean) * 1000
par(mfrow=c(2,1))
plot( x=df.weekend.steps[,1],
y=df.weekend.steps[,2],
type="l",
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval ID")
plot( x=weekend_steps[,1],
y=weekend_steps[,2],
type="l",
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval")
plot( x=weekday_steps[,1],
y=weekday_steps[,2],
type="l",
asp=.25
col=554,
main="Weekday average steps per interval",
ylab="Average steps",
xlab="Interval")
plot( x=weekend_steps[,1],
y=weekend_steps[,2],
type="l",
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval")
weekend_steps <- aggregate(weekend_activity$steps, by=list(weekend_activity$interval), FUN=mean)
weekday_steps <- aggregate(weekday_activity$steps, by=list(weekday_activity$interval), FUN=mean)
par(mfrow=c(2,1))
plot( x=weekend_steps[,1],
y=weekend_steps[,2],
type="l",
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval")
plot( x=weekday_steps[,1],
y=weekday_steps[,2],
type="l",
asp=.25
col=554,
main="Weekday average steps per interval",
ylab="Average steps",
xlab="Interval")
setwd = "/Users/Pa/R Classes/JHDS_ReproducableResearch/RepData_PeerAssessment1"
activity<-read.csv ("activity.csv")
setwd = "/Users/Pa/R Classes/JHDS_ReproducableResearch/RepData_PeerAssessment1"
dir
dir()
setwd = "/Users/Pa/R Classes/JHDS_ReproducableResearch/RepData_PeerAssessment1/"
dir()
activity<-read.csv ("activity.csv")
setwd = "/R Classes/JHDS_ReproducableResearch/RepData_PeerAssessment1/"
dir()
setwd("~/R Classes/JHDS_ReproducableResearch/RepData_PeerAssessment1")
amemded_activity["weekday"]<-weekdays(amemded_activity$date)
plot( x=weekday_steps[,1],
y=weekday_steps[,2],
plot( x=weekend_steps[,1],
y=weekend_steps[,2],
type="l",
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval")
plot( x=weekend_steps[,1],
y=weekend_steps[,2],
type="l",
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval")
plot( x=weekend_steps[,1],
y=weekend_steps[,2],
type="l",
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval")
plot( x=weekday_steps[,1],
y=weekday_steps[,2],
type="l",
col=554,
main="Weekday average steps per interval",
ylab="Average steps",
xlab="Interval")
par(mfrow=c(2,1))
plot( x=weekend_steps[,1],
y=weekend_steps[,2],
type="l",
main="Weekend average steps per interval",
ylab="Average steps",
xlab="Interval")
plot( x=weekday_steps[,1],
y=weekday_steps[,2],
type="l",
col=554,
main="Weekday average steps per interval",
ylab="Average steps",
xlab="Interval")
The **mean** total number of steps taken per day is
'r mean_steps_per_day' steps.
